{"ast":null,"code":"var _jsxFileName = \"/Users/shihab/StudioProjects/rice-d3/rice-d3/src/components/barChart2/BarChart2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PieChart(props) {\n  _s();\n\n  const {\n    data\n  } = props;\n  const margin = {\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 50\n  };\n  const width = 2 * 100 + margin.left + margin.right;\n  const height = 2 * 100 + margin.top + margin.bottom;\n  const colorScale = d3.scaleSequential().interpolator(d3.interpolateCool).domain([0, data.length]);\n  useEffect(() => {\n    drawChart();\n  }, [data]);\n\n  function drawChart() {\n    // Remove the old svg\n    d3.select('#pie-container').select('svg').remove(); // Create new svg\n\n    const svg = d3.select('#pie-container').append('svg').attr('width', width).attr('height', height).append('g').attr('transform', `translate(${width / 2}, ${height / 2})`);\n    const arcGenerator = d3.arc().innerRadius(30).outerRadius(100);\n    const pieGenerator = d3.pie().padAngle(0).value(d => d.value);\n    const arc = svg.selectAll().data(pieGenerator(data)).enter(); // Append arcs\n\n    arc.append('path').attr('d', arcGenerator).style('fill', (_, i) => colorScale(i)).style('stroke', '#ffffff').style('stroke-width', 0); // Append text labels\n\n    arc.append('text').attr('text-anchor', 'middle').attr('alignment-baseline', 'middle').text(d => d.data.label).style('fill', (_, i) => colorScale(data.length - i)).attr('transform', d => {\n      const [x, y] = arcGenerator.centroid(d);\n      return `translate(${x}, ${y})`;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pie-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PieChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/Users/shihab/StudioProjects/rice-d3/rice-d3/src/components/barChart2/BarChart2.js"],"names":["React","useEffect","d3","PieChart","props","data","margin","top","right","bottom","left","width","height","colorScale","scaleSequential","interpolator","interpolateCool","domain","length","drawChart","select","remove","svg","append","attr","arcGenerator","arc","innerRadius","outerRadius","pieGenerator","pie","padAngle","value","d","selectAll","enter","style","_","i","text","label","x","y","centroid"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nfunction PieChart(props) {\n  const {\n    data,\n  } = props;\n\n  const margin = {\n    top: 50, right: 50, bottom: 50, left: 50,\n  };\n\n  const width = 2 * 100+ margin.left + margin.right;\n  const height = 2 * 100 + margin.top + margin.bottom;\n\n  const colorScale = d3     \n    .scaleSequential()      \n    .interpolator(d3.interpolateCool)      \n    .domain([0, data.length]);\n\n  useEffect(() => {\n    drawChart();\n  }, [data]);\n\n  function drawChart() {\n    // Remove the old svg\n    d3.select('#pie-container')\n      .select('svg')\n      .remove();\n\n    // Create new svg\n    const svg = d3\n      .select('#pie-container')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('transform', `translate(${width / 2}, ${height / 2})`);\n\n    const arcGenerator = d3\n      .arc()\n      .innerRadius(30)\n      .outerRadius(100);\n\n    const pieGenerator = d3\n      .pie()\n      .padAngle(0)\n      .value((d) => d.value);\n\n    const arc = svg\n      .selectAll()\n      .data(pieGenerator(data))\n      .enter();\n\n    // Append arcs\n    arc\n      .append('path')\n      .attr('d', arcGenerator)\n      .style('fill', (_, i) => colorScale(i))\n      .style('stroke', '#ffffff')\n      .style('stroke-width', 0);\n\n    // Append text labels\n    arc\n      .append('text')\n      .attr('text-anchor', 'middle')\n      .attr('alignment-baseline', 'middle')\n      .text((d) => d.data.label)\n      .style('fill', (_, i) => colorScale(data.length - i))\n      .attr('transform', (d) => {\n        const [x, y] = arcGenerator.centroid(d);\n        return `translate(${x}, ${y})`;\n      });\n  }    \n\n  return <div id=\"pie-container\" />;\n}\n\nexport default PieChart;"]},"metadata":{},"sourceType":"module"}