{"ast":null,"code":"var _jsxFileName = \"/Users/shihab/StudioProjects/rice-d3/rice-d3/src/components/TreemapPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Treemap from './Treemap';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dataset = {\n  \"children\": [{\n    \"name\": \"boss1\",\n    \"children\": [{\n      \"name\": \"mister_a\",\n      \"group\": \"A\",\n      \"value\": 28,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_b\",\n      \"group\": \"A\",\n      \"value\": 19,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_c\",\n      \"group\": \"C\",\n      \"value\": 18,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_d\",\n      \"group\": \"C\",\n      \"value\": 19,\n      \"colname\": \"level3\"\n    }],\n    \"colname\": \"level2\"\n  }, {\n    \"name\": \"boss2\",\n    \"children\": [{\n      \"name\": \"mister_e\",\n      \"group\": \"C\",\n      \"value\": 14,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_f\",\n      \"group\": \"A\",\n      \"value\": 11,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_g\",\n      \"group\": \"B\",\n      \"value\": 15,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_h\",\n      \"group\": \"B\",\n      \"value\": 16,\n      \"colname\": \"level3\"\n    }],\n    \"colname\": \"level2\"\n  }, {\n    \"name\": \"boss3\",\n    \"children\": [{\n      \"name\": \"mister_i\",\n      \"group\": \"B\",\n      \"value\": 10,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_j\",\n      \"group\": \"A\",\n      \"value\": 13,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_k\",\n      \"group\": \"A\",\n      \"value\": 13,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_l\",\n      \"group\": \"D\",\n      \"value\": 25,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_m\",\n      \"group\": \"D\",\n      \"value\": 16,\n      \"colname\": \"level3\"\n    }, {\n      \"name\": \"mister_n\",\n      \"group\": \"D\",\n      \"value\": 28,\n      \"colname\": \"level3\"\n    }],\n    \"colname\": \"level2\"\n  }],\n  \"name\": \"CEO\"\n};\n\nfunction TreemapPage() {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    setData(dataset);\n  }, []);\n\n  function deepCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n\n  const updateData1 = () => {\n    var _data = deepCopy(data);\n\n    _data[\"children\"][0][\"children\"][0][\"value\"] = 50;\n    _data[\"children\"][0][\"children\"][1][\"value\"] = 10;\n    _data[\"children\"][0][\"children\"][2][\"value\"] = 30;\n    _data[\"children\"][1][\"children\"][0][\"value\"] = 4;\n    _data[\"children\"][1][\"children\"][1][\"value\"] = 8;\n    setData(_data);\n  };\n\n  const updateData2 = () => {\n    var _data = deepCopy(data);\n\n    _data[\"children\"][0][\"children\"].push({\n      \"name\": \"mister_p\",\n      \"group\": \"C\",\n      \"value\": 20,\n      \"colname\": \"level3\"\n    });\n\n    _data[\"children\"][2][\"children\"].splice(2, 1);\n\n    setData(_data);\n  };\n\n  const updateData3 = () => {\n    var _data = deepCopy(data);\n\n    _data[\"children\"].push({\n      \"name\": \"boss4\",\n      \"children\": [{\n        \"name\": \"mister_z\",\n        \"group\": \"E\",\n        \"value\": 40,\n        \"colname\": \"level3\"\n      }]\n    });\n\n    setData(_data);\n  };\n\n  const updateData4 = () => {\n    var _data = deepCopy(data);\n\n    _data[\"children\"].splice(1, 1);\n\n    setData(_data);\n  };\n\n  const resetData = () => {\n    setData(dataset);\n  };\n\n  if (data === null) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Graphs with React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btns\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateData1,\n        children: \"Change Child Data Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateData2,\n        children: \"Add/Remove Child Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateData3,\n        children: \"Add Parent Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: updateData4,\n        children: \"Remove Parent Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetData,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Treemap, {\n      width: 600,\n      height: 400,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TreemapPage, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = TreemapPage;\nexport default TreemapPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreemapPage\");","map":{"version":3,"sources":["/Users/shihab/StudioProjects/rice-d3/rice-d3/src/components/TreemapPage.js"],"names":["React","useState","useEffect","Treemap","dataset","TreemapPage","data","setData","deepCopy","obj","JSON","parse","stringify","updateData1","_data","updateData2","push","splice","updateData3","updateData4","resetData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Treemap from './Treemap';\n\nconst dataset = {\"children\":[{\"name\":\"boss1\",\"children\":[{\"name\":\"mister_a\",\"group\":\"A\",\"value\":28,\"colname\":\"level3\"},{\"name\":\"mister_b\",\"group\":\"A\",\"value\":19,\"colname\":\"level3\"},{\"name\":\"mister_c\",\"group\":\"C\",\"value\":18,\"colname\":\"level3\"},{\"name\":\"mister_d\",\"group\":\"C\",\"value\":19,\"colname\":\"level3\"}],\"colname\":\"level2\"},{\"name\":\"boss2\",\"children\":[{\"name\":\"mister_e\",\"group\":\"C\",\"value\":14,\"colname\":\"level3\"},{\"name\":\"mister_f\",\"group\":\"A\",\"value\":11,\"colname\":\"level3\"},{\"name\":\"mister_g\",\"group\":\"B\",\"value\":15,\"colname\":\"level3\"},{\"name\":\"mister_h\",\"group\":\"B\",\"value\":16,\"colname\":\"level3\"}],\"colname\":\"level2\"},{\"name\":\"boss3\",\"children\":[{\"name\":\"mister_i\",\"group\":\"B\",\"value\":10,\"colname\":\"level3\"},{\"name\":\"mister_j\",\"group\":\"A\",\"value\":13,\"colname\":\"level3\"},{\"name\":\"mister_k\",\"group\":\"A\",\"value\":13,\"colname\":\"level3\"},{\"name\":\"mister_l\",\"group\":\"D\",\"value\":25,\"colname\":\"level3\"},{\"name\":\"mister_m\",\"group\":\"D\",\"value\":16,\"colname\":\"level3\"},{\"name\":\"mister_n\",\"group\":\"D\",\"value\":28,\"colname\":\"level3\"}],\"colname\":\"level2\"}],\"name\":\"CEO\"};\n\nfunction TreemapPage() {\n\tconst [data, setData] = useState(null);\n\n\tuseEffect(() => {\n\t\tsetData(dataset);\n\t}, []);\n\n\tfunction deepCopy(obj){\n\t\treturn JSON.parse(JSON.stringify(obj));\n\t}\n\n\tconst updateData1 = () => {\n\t\tvar _data = deepCopy(data);\n\t\t\n\t\t_data[\"children\"][0][\"children\"][0][\"value\"] = 50;\n\t\t_data[\"children\"][0][\"children\"][1][\"value\"] = 10;\n\t\t_data[\"children\"][0][\"children\"][2][\"value\"] = 30;\n\n\t\t_data[\"children\"][1][\"children\"][0][\"value\"] = 4;\n\t\t_data[\"children\"][1][\"children\"][1][\"value\"] = 8;\n\n\t\tsetData(_data);\n\t}\n\n\tconst updateData2 = () => {\n\t\tvar _data = deepCopy(data);\n\t\t\n\t\t_data[\"children\"][0][\"children\"].push({\n\t\t\t\"name\":\"mister_p\",\n\t\t\t\"group\":\"C\",\n\t\t\t\"value\":20,\n\t\t\t\"colname\":\"level3\"\n\t\t})\n\n\t\t_data[\"children\"][2][\"children\"].splice(2,1);\n\n\t\tsetData(_data);\n\t}\n\n\tconst updateData3 = () => {\n\t\tvar _data = deepCopy(data);\n\n\t\t_data[\"children\"].push({\n\t\t\t\"name\": \"boss4\",\n\t\t\t\"children\": [{\n\t\t\t\t\"name\":\"mister_z\",\n\t\t\t\t\"group\":\"E\",\n\t\t\t\t\"value\":40,\n\t\t\t\t\"colname\":\"level3\"\n\t\t\t}]\n\t\t});\n\n\t\tsetData(_data);\n\t}\n\n\tconst updateData4 = () => {\n\t\tvar _data = deepCopy(data);\n\n\t\t_data[\"children\"].splice(1,1);\n\n\t\tsetData(_data);\n\t}\n\n\tconst resetData = () => {\n\t\tsetData(dataset);\n\t}\n\n\tif(data === null) return <></>;\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h2>Graphs with React</h2>\n\t\t\t<div className=\"btns\">\n\t\t\t\t<button onClick={updateData1}>Change Child Data Values</button>\n\t\t\t\t<button onClick={updateData2}>Add/Remove Child Nodes</button>\n\t\t\t\t<button onClick={updateData3}>Add Parent Nodes</button>\n\t\t\t\t<button onClick={updateData4}>Remove Parent Nodes</button>\n\t\t\t\t<button onClick={resetData}>Reset</button>\n\t\t\t</div>\n\t\t\t<Treemap width={600} height={400} data={data} />\n\t\t</div>\n\t);\n}\n\nexport default TreemapPage;"]},"metadata":{},"sourceType":"module"}