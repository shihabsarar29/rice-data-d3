{"ast":null,"code":"import * as d3 from 'd3';\nconst parseTime = d3.timeParse('%d/%m/%y');\nlet Chart3 = {},\n    x,\n    y,\n    line,\n    width,\n    height,\n    g;\n\nChart3.create = (el, props, state) => {\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 50\n  };\n  let svg = d3.select(el).append('svg').attr('class', 'Chart3').attr('width', props.width).attr('height', props.height);\n  width = svg.attr('width') - margin.left - margin.right;\n  height = svg.attr('height') - margin.top - margin.bottom;\n  g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n  x = d3.scaleTime().rangeRound([0, width]);\n  y = d3.scaleLinear().rangeRound([height, 0]);\n  line = d3.line().x(function (d) {\n    return x(d.Date);\n  }).y(function (d) {\n    return y(d.Close);\n  });\n  Chart3.update(state);\n};\n\nChart3.update = state => {\n  let svg = d3.select('svg');\n  Chart3.draw(svg, state.data, state.title);\n};\n\nChart3.draw = function (svg, data, title) {\n  this.cleanUp();\n  data.forEach(function (d) {\n    d.Date = parseTime(d.Date);\n    d.Close = +d.Close;\n    return d;\n  });\n  x.domain(d3.extent(data, function (d) {\n    return d.Date;\n  }));\n  y.domain([0, d3.max(data, function (d) {\n    return d.Close;\n  })]);\n  g.append('g').attr('class', 'x-axis').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x).ticks(d3.timeMonth.every(3)));\n  g.append('g').attr('class', 'y-axis').call(d3.axisLeft(y)).append('text').attr('fill', '#000').attr('transform', 'rotate(-90)').attr('y', 6).attr('dy', '0.71em').attr('text-anchor', 'end').text('Price ($)');\n  g.append('path').attr('class', 'Chart3-line').datum(data).attr('fill', 'none').attr('stroke', 'steelblue').attr('stroke-linejoin', 'round').attr('stroke-linecap', 'round').attr('stroke-width', 1.5).attr('d', line);\n  g.append('text').attr('class', 'Chart3-title').attr('x', width / 2).attr('y', 0).attr('text-anchor', 'middle').style('font-size', '16px').text(title);\n};\n\nChart3.cleanUp = function (el) {\n  d3.selectAll('.x-axis').remove();\n  d3.selectAll('.y-axis').remove();\n  d3.selectAll('.Chart3-title').remove();\n  d3.selectAll('.Chart3-line').remove();\n};\n\nexport default Chart3;","map":{"version":3,"sources":["/Users/shihab/StudioProjects/rice-d3/rice-d3/src/components/Chart3.js"],"names":["d3","parseTime","timeParse","Chart3","x","y","line","width","height","g","create","el","props","state","margin","top","right","bottom","left","svg","select","append","attr","scaleTime","rangeRound","scaleLinear","d","Date","Close","update","draw","data","title","cleanUp","forEach","domain","extent","max","call","axisBottom","ticks","timeMonth","every","axisLeft","text","datum","style","selectAll","remove"],"mappings":"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","sourcesContent":["\nimport * as d3 from 'd3';\n\nconst parseTime = d3.timeParse('%d/%m/%y');\n\nlet Chart3 = {},\n  x, y,\n  line,\n  width,\n  height,\n  g;\n\nChart3.create = (el, props, state) => {\n  const margin = { top: 20, right: 20, bottom: 30, left: 50 };\n\n  let svg = d3.select(el).append('svg')\n    .attr('class', 'Chart3')\n    .attr('width', props.width)\n    .attr('height', props.height);\n\n  width = svg.attr('width') - margin.left - margin.right;\n  height = svg.attr('height') - margin.top - margin.bottom;\n  g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n  x = d3.scaleTime().rangeRound([0, width]);\n  y = d3.scaleLinear().rangeRound([height, 0]);\n  line = d3.line()\n    .x(function (d) { return x(d.Date); })\n    .y(function (d) { return y(d.Close); });\n\n  Chart3.update(state);\n}\n\nChart3.update = (state) => {\n  let svg = d3.select('svg');\n\n  Chart3.draw(svg, state.data, state.title);\n}\n\nChart3.draw = function (svg, data, title) {\n  this.cleanUp();\n\n  data.forEach(function (d) {\n    d.Date = parseTime(d.Date);\n    d.Close = +d.Close;\n    return d;\n  });\n\n  x.domain(d3.extent(data, function (d) { return d.Date; }));\n  y.domain([0, d3.max(data, function (d) { return d.Close; })]);\n\n  g.append('g')\n    .attr('class', 'x-axis')\n    .attr('transform', 'translate(0,' + height + ')')\n    .call(d3.axisBottom(x).ticks(d3.timeMonth.every(3)));\n\n  g.append('g')\n    .attr('class', 'y-axis')\n    .call(d3.axisLeft(y))\n    .append('text')\n    .attr('fill', '#000')\n    .attr('transform', 'rotate(-90)')\n    .attr('y', 6)\n    .attr('dy', '0.71em')\n    .attr('text-anchor', 'end')\n    .text('Price ($)');\n\n  g.append('path')\n    .attr('class', 'Chart3-line')\n    .datum(data)\n    .attr('fill', 'none')\n    .attr('stroke', 'steelblue')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-linecap', 'round')\n    .attr('stroke-width', 1.5)\n    .attr('d', line);\n\n  g.append('text')\n    .attr('class', 'Chart3-title')\n    .attr('x', (width / 2))\n    .attr('y', 0)\n    .attr('text-anchor', 'middle')\n    .style('font-size', '16px')\n    .text(title);\n}\n\nChart3.cleanUp = function (el) {\n  d3.selectAll('.x-axis').remove();\n  d3.selectAll('.y-axis').remove();\n  d3.selectAll('.Chart3-title').remove();\n  d3.selectAll('.Chart3-line').remove();\n};\n\nexport default Chart3;"]},"metadata":{},"sourceType":"module"}